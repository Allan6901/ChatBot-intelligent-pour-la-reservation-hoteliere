# Generated by Django 5.2.7 on 2025-10-18 19:39

from django.db import migrations


# --- (C1) Vérifie que l'hôtel possède au moins une chambre du type demandé ---
C1_TRIGGER = """
CREATE TRIGGER IF NOT EXISTS check_reservation_type_exists
BEFORE INSERT ON Reservation
FOR EACH ROW
WHEN NOT EXISTS (
    SELECT 1 FROM Chambre
    WHERE Chambre.num_ho_id = NEW.num_ho_id
      AND Chambre.num_ty_id = NEW.num_ty_id
)
BEGIN
    SELECT RAISE(ABORT, 'Erreur (C1): Hôtel ne possède aucune chambre de ce type');
END;
"""

# --- (C2) Empêche le chevauchement des occupations pour une même chambre ---
C2_TRIGGER = """
CREATE TRIGGER IF NOT EXISTS check_occupation_overlap
BEFORE INSERT ON Occupation
FOR EACH ROW
WHEN EXISTS (
    SELECT 1 FROM Occupation o
    WHERE o.num_ch_id = NEW.num_ch_id
      AND (
        (NEW.date_a BETWEEN o.date_a AND o.date_d)
        OR (NEW.date_d BETWEEN o.date_a AND o.date_d)
        OR (NEW.date_a <= o.date_a AND NEW.date_d >= o.date_d)
      )
)
BEGIN
    SELECT RAISE(ABORT, 'Erreur (C2): Chambre déjà occupée pendant cette période');
END;
"""

class Migration(migrations.Migration):

    dependencies = [
        ('App', '0002_alter_chambre_table_alter_client_table_and_more'),
    ]

    operations = [
        migrations.RunSQL(C1_TRIGGER),
        migrations.RunSQL(C2_TRIGGER),
    ]
